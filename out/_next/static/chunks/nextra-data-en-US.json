{"/":{"title":"Introduction","data":{"":"react-map4d-map cho phép bạn sử dụng map4d web sdk dưới dạng component","what-is-react-map4d-map#What is react-map4d-map?":"Thư viện sdk dễ sử dụng dành riêng cho react, hỗ trợ cho cả js và typescript.","documentation#Documentation":"Hãy bắt đầu cài đặt và sử dụng với Getting started."}},"/another":{"title":"Another","data":{"":"let a = 1;\n\nconsole.log(a);","component#Component":"","external-component#External Component":""}},"/advanced":{"title":"Advanced","data":{"":"This is the index page for the Advanced folder!"}},"/advanced/satori":{"title":"Satori","data":{"":"Satori (悟り) is a Japanese Buddhist term for awakening, \"comprehension; understanding\"."}},"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar."}},"/start":{"title":"Getting started","data":{"":"Chào mừng bạn đến với tài liệu map4d web sdk dành cho react","cách-cài-đặt#Cách cài đặt":"npm i react-map4d-map"}},"/map":{"title":"Map","data":{"":"","sử-dụng#Sử dụng":"import * as React from \"react\";\nimport { MFMap } from \"react-map4d-map\";\n\nconst DemoMap = () => {\nreturn (\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\noptions={{\ncenter: { lat: 16.072163491469226, lng: 108.22690536081757 },\nzoom: 15,\ncontrols: true,\n}}\naccessKey={\"your key\"}\nversion={\"2.4\"}\n/>\n</div>\n);\n};\n\nexport default DemoMap;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\toptions\ttrue\tMapOptions\t\tCác tùy chọn của map\t2\taccessKey\ttrue\tstring\t\tKey api\t3\tversion\ttrue\tstring\t\tVersion của sdk\t4\tenvironment\tfasle\t\"dev\"|\"test\"|undefined\t\tMôi trường map, nếu ko có thì sẽ là bản production\t5\tonMapReady\tfasle\t(map: any) => void\t\tEvent được gọi sau khi map được tạo\t6\tonClickLocation\tfasle\t(args: any) => void\t\tEvent click vào một vị trí trên map\t7\tonRightClickLocation\tfasle\t(args: any) => void\t\tEvent right click vào một vị trí trên map\t8\tonCameraChanging\tfasle\t(args: any) => void\t\tEvent khi một thông số bất kỳ của camera map thay đổi\t9\tonTilesLoaded\tfasle\t(args: any) => void\t\tEvent khi map load xong tất cả các tile ban đầu"}},"/drawing/marker":{"title":"Marker","data":{"":"","sử-dụng#Sử dụng":"import { useState } from \"react\";\nimport { MFMap, MFMarker } from \"react-map4d-map\";\n\nconst DemoMarker = () => {\nconst [post, setPost] = useState({ lat: 16.0685, lng: 108.2215 });\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"300px\" }}>\n<MFMap\noptions={{\ncenter: post,\nzoom: 15,\n}}\nversion={\"2.4\"}\naccessKey={\"d69ab3c4b70818de546a1b1bb15aeaa7\"}\n>\n<MFMarker position={post} />\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoMarker;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tposition\ttrue\tILatLng\t\tVị trí trên map\t2\tvisible\tfalse\tboolean\ttrue\tCho phép hiển thị\t3\tanchor\tfalse\tIPoint\t{x: 0.5, y: 1.0}\tvị trí điểm neo so với marker\t4\tlabelAnchor\tfasle\tIPoint\t{x: 0.5, y: 0.5}\tVị trí điểm neo so với label\t5\ticon\tfasle\tIconProps\t\tTùy chọn cho marker (width, height, url)\t6\televation\tfasle\tnumber\t0\tĐộ cao của điểm neo so với mực nước biển\t7\trotation\tfasle\tnumber\t0\tchỉ định góc quay của Marker theo đơn vị là Độ\t8\ttitle\tfasle\tstring\t\tTiêu đề của Marker. Tiêu đề sẽ được hiển thị ở dòng đầu tiên của bảng thông tin Marker\t9\tsnippet\tfasle\tstring\t\tMô tả thông tin ngắn gọn cho Marker. Snippet sẽ được hiển thị ở bẳng thông tin của Marker và phía dưới dòng tiêu đề\t10\twindowAnchor\tfalse\tIPoint\t{x: 0.5, y: 0.0}\tXác định điểm neo so với bảng thông tin của Marker. Bảng thông tin này sẽ hiện lên khi click vào Marker\t11\tzIndex\tfalse\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các Marker với nhau hoặc giữa Marker với các đối tượng khác trên bản đồ\t12\tlabel\tfalse\tstring | MarkerLabel\t\tChỉ định label của Marker. Label sẽ được hiển thị ở tâm của Marker\t13\tdraggable\tfasle\tboolean\tfalse\tCho phép người dùng có thể kéo Marker trên bản đồ hay không\t14\ticonView\tfasle\tstring | Node\t\tCho phép thêm node HTML vào và thay thế icon mặc định của Marker\t15\tuserInteractionEnabled\tfasle\tboolean\t\tCho phép người dùng có thể tương tác được với Marker hay không\t16\tmap\tfasle\tmap4d.Map\t\tHiển thị marker ở map nào, nếu không có sẽ hiển thị ở map gần nhất chứa marker\t17\tinfoWindow\tfasle\tstring | Node\t\tCustom bảng thông tin thay cho bảng thông tin mặc định\t18\tinfoContents\tfasle\tstring | Node\t\tCustom nội dung cho bảng thông tin\t19\tshowInfoWindow\tfasle\tboolean\t\tHiện bảng thông tin của marker\t20\tonClick\tfasle\t(marker: map4d.Marker) => void\t\tEvent được gọi sau khi click marker\t21\tonCreated\tfasle\t(marker: map4d.Marker) => void\t\tEvent sau khi tạo marker\t22\tonRightClick\tfasle\t(marker: map4d.Marker) => void\t\tEvent được gọi sau khi right click marker\t23\tonDragEnd\tfasle\t(marker: map4d.Marker) => void\t\tEvent khi kết thúc kéo marker"}},"/drawing/circle":{"title":"Circle","data":{"":"","sử-dụng#Sử dụng":"import { useState } from \"react\";\nimport { MFCircle, MFMap } from \"react-map4d-map\";\n\nconst DemoCircle = () => {\nconst [post, setPost] = useState({ lat: 10.773201, lng: 106.700147 });\nconst [radius, setRadius] = useState(10);\n\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"300px\" }}>\n<MFMap\noptions={{\ncenter: post,\nzoom: 20,\ncontrols: true,\n}}\naccessKey={\"d69ab3c4b70818de546a1b1bb15aeaa7\"}\nversion={\"2.4\"}\n>\n<MFCircle radius={radius} center={post}></MFCircle>\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoCircle;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tcenter\ttrue\tILatLng\t\tVị trí trên map\t2\tradius\ttrue\tnumber\ttrue\tbán kính, đơn vị là mét\t3\tfillColor\tfalse\tstring\t\"#0000FF\"\tChỉ định màu sắc của Circle theo mã HEX (ví dụ \"#FF0000\")\t4\tfillOpacity\tfasle\tnumber\t1\tChỉ định độ trong suốt màu của Circle, khoảng giá trị của nó nằm trong khoảng từ 0.0 đến 1.0\t5\tvisible\tfasle\tboolean\ttrue\tXác định Circle có thể ẩn hay hiện trên bản đồ\t6\tstrokeColor\tfasle\tstring\t\"#00FF00\"\tChỉ định màu sắc của đường viền Circle theo mã HEX (ví dụ \"#FF0000\")\t7\tstrokeWidth\tfasle\tnumber\t0\tChỉ định độ lớn của đường viền Circle theo đơn vị point\t8\tdraggable\tfasle\tboolean\tfalse\tCho phép người dùng có thể kéo Circle trên bản đồ hay không\t9\tzIndex\tfalse\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các Circle với nhau hoặc giữa Circle với các đối tượng khác trên bản đồ\t10\televation\tfalse\tnumber\t0\tChỉ định độ cao của Circle so với mực nước biển, đơn vị là mét\t11\tuserInteractionEnabled\tfasle\tboolean\t\tCho phép người dùng có thể tương tác được với Marker hay không\t12\tmap\tfasle\tmap4d.Map\t\tHiển thị Circle ở map nào, nếu không có sẽ hiển thị ở map gần nhất chứa Circle\t13\tonCreated\tfasle\t(circle: map4d.Circle) => void\t\tEvent sau khi tạo Circle"}},"/drawing/polyline":{"title":"Polyline","data":{"":"","sử-dụng#Sử dụng":"import { useState } from \"react\";\nimport { MFMap, MFPolyline } from \"react-map4d-map\";\n\nconst center = { lat: 10.773201, lng: 106.700147 };\nconst DemoPolyline = () => {\nconst [path, setPath] = useState([\n[106.69938, 10.772431],\n[106.700147, 10.773201],\n[106.700763, 10.771783],\n[106.701901, 10.772302],\n[106.701493, 10.773267],\n[106.702835, 10.773599],\n]);\n\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"300px\" }}>\n<MFMap\noptions={{\ncenter: center,\nzoom: 17,\ncontrols: true,\n}}\naccessKey={\"your key\"}\nversion={\"2.3\"}\n>\n<MFPolyline strokeColor={\"#ff0000\"} strokeWidth={10} path={path} />\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoPolyline;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tpath\ttrue\tILatLng[]\t\tTruyền vào một mảng các tọa độ ILatLng để tạo Polyline\t2\tstrokeWidth\ttrue\tnumber\t\tChỉ định độ rộng của Polyline theo đơn vị point\t3\tstrokeColor\tfalse\tstring\t\"#0000FF\"\tChỉ định màu sắc của Polyline theo mã HEX (ví dụ \"#FF0000\"). Tham số này không hỗ trợ chỉ định màu theo tên (ví dụ: red, green, blue, ...)\t4\tstrokeOpacity\tfasle\tnumber\t1\tChỉ định độ trong suốt của Polyline, khoảng giá trị của nó nằm trong khoảng từ 0.0 đến 1.0\t5\tvisible\tfasle\tboolean\ttrue\tXác định Polyline có thể ẩn hay hiện trên bản đồ\t6\tclosed\tfasle\tstring\tfalse\tChỉ định Polyline có nối điểm đầu và điểm cuối lại với nhau hay không. Nếu bạn chỉ định thuộc tính này bằng true thì bạn sẽ được một hình đa giác\t7\tdraggable\tfasle\tboolean\tfalse\tCho phép người dùng có thể kéo Polyline trên bản đồ hay không\t8\tzIndex\tfalse\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các Polyline với nhau hoặc giữa Polyline với các đối tượng khác trên bản đồ\t9\televation\tfalse\tnumber\t0\tChỉ định độ cao của Polyline so với mực nước biển, đơn vị là mét\t10\tstrokePattern\tfalse\tPatternItem\tSolidPattern\tChỉ định kiểu vẽ của Polyline (SolidPattern, DashPattern, DotPattern hay IconPattern) Chỉ định độ cao của Polyline so với mực nước biển, đơn vị là mét\t11\tuserInteractionEnabled\tfasle\tboolean\ttrue\tCho phép người dùng có thể tương tác được với Polyline hay không\t12\tmap\tfasle\tmap4d.Map\t\tHiển thị Polyline ở map nào, nếu không có sẽ hiển thị ở map gần nhất chứa Polyline\t13\tonCreated\tfasle\t(Polyline: map4d.Polyline) => void\t\tEvent sau khi tạo Polyline"}},"/drawing/polygon":{"title":"Polygon","data":{"":"","sử-dụng#Sử dụng":"import { useState } from \"react\";\nimport { MFMap, MFPolygon } from \"react-map4d-map\";\n\nconst DemoPolygon = () => {\nconst [paths, setPaths] = useState([\n[\n{ lat: 10.771749380684138, lng: 106.70001268386841 },\n{ lat: 10.768534727930506, lng: 106.70332789421082 },\n{ lat: 10.770684860129196, lng: 106.70641779899597 },\n{ lat: 10.77348844082262, lng: 106.70296311378479 },\n{ lat: 10.771749380684138, lng: 106.70001268386841 },\n],\n]);\nconst onMapReady1 = (map1) => {\nconsole.log(map1);\n};\n\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"300px\" }}>\n<MFMap\nonMapReady={onMapReady1}\noptions={{\ncenter: { lat: 10.771111, lng: 106.703218 },\nzoom: 16,\ncontrols: true,\n}}\naccessKey={\"your key\"}\nversion={\"2.4\"}\n>\n<MFPolygon fillOpacity={0.1} paths={paths} />\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoPolygon;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tpaths\ttrue\tILatLng[][]\t\tTruyền vào một mảng chứa các mảng tọa độ ILatLng để tạo Polygon. Nếu bạn muốn tạo các Polygon có lỗ ở bên trong thì bạn cần truyền ít nhất 2 mảng tọa độ, còn nếu không có lỗ thì chỉ cần truyền một mảng vào tham số này\t2\tfillColor\tfalse\tstring\t\"#0000FF\"\tChỉ định màu tô phía trong của Polygon theo mã HEX (ví dụ \"#FF0000\")\t3\tfillOpacity\tfalse\tnumber\t1\tChỉ định độ trong suốt của màu tô phía trong Polygon, khoảng giá trị của nó nằm trong khoảng từ 0.0 đến 1.0\t4\tvisible\tfasle\tboolean\ttrue\tXác định Polygon có thể ẩn hay hiện trên bản đồ\t5\tstrokeColor\tfasle\tstring\t\"#0000FF\"\tChỉ định màu sắc đường viền ngoài cùng của Polygon theo mã HEX\t6\tstrokeWidth\tfasle\tnumber\t\tChỉ định độ rộng đường viền của Polygon theo đơn vị point\t7\tdraggable\tfasle\tboolean\tfalse\tCho phép người dùng có thể kéo Polygon trên bản đồ hay không\t8\tzIndex\tfalse\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các Polygon với nhau hoặc giữa Polygon với các đối tượng khác trên bản đồ\t9\televation\tfalse\tnumber\t0\tChỉ định độ cao của Polygon so với mực nước biển, đơn vị là mét\t11\tuserInteractionEnabled\tfasle\tboolean\ttrue\tCho phép người dùng có thể tương tác được với Polygon hay không\t12\tmap\tfasle\tmap4d.Map\t\tHiển thị Polygon ở map nào, nếu không có sẽ hiển thị ở map gần nhất chứa Polygon\t13\tonCreated\tfasle\t(Polygon: map4d.Polygon) => void\t\tEvent sau khi tạo Polygon"}},"/layers/tile":{"title":"Tile Overlay","data":{"":"","sử-dụng#Sử dụng":"import { MFMap, MFTileOverlay } from \"react-map4d-map\"\n\n\nconst getUrl = (x, y, zoom, is3dMode) => {\nreturn `https://tile.openstreetmap.de/${zoom}/${x}/${y}.png`\n},\n\nconst DemoTileOverlay = (props) => {\nreturn (\n<>\n<div style={{ width: '100%', height: '400px' }}>\n<MFMap\noptions={{\ncenter: { lat: 16.077279, lng: 108.222275 },\nzoom: 16,\ncontrols: true\n}}\naccessKey={\"your key\"}\nversion={\"2.4\"} >\n<MFTileOverlay\ngetUrl={getUrl}\nzIndex={1}\n/>\n</MFMap>\n</div>\n</>\n)\n}\n\nexport default DemoTileOverlay;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tgetUrl\ttrue\tfunction\t\tHàm nhận vào 4 giá trị x, y, zoom, is3dMode và trả về đường dẫn đến map tile\t2\tvisible\tfalse\tboolean\ttrue\tNếu là true thì Tile overlay sẽ được hiển thị\t3\tzIndex\tfalse\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các Tile Overlay với nhau hoặc giữa Tile Overlay với các đối tượng khác trên bản đồ\t4\topacity\tfalse\tnumber\t1\tĐộ trong suốt của Tile overlay. Có giá trị từ 0 đến 1\t5\tmap\tfasle\tmap4d.Map\t\tHiển thị Tile Overlay ở map nào, nếu không có sẽ hiển thị ở map gần nhất chứa Tile Overlay\t6\tonCreated\tfasle\t(Tile Overlay: map4d.TileOverlay) => void\t\tEvent sau khi tạo Tile Overlay"}},"/layers/ground":{"title":"Ground Overlay","data":{"":"","sử-dụng#Sử dụng":"import { MFGroundOverlay, MFMap } from \"react-map4d-map\";\n\nlet options = {\ngetUrl: function (x, y, zoom, is3dMode) {\nreturn `https://a.tile.opentopomap.org/${zoom}/${x}/${y}.png`;\n},\nbounds: [\n{ lng: 108.22125434875488, lat: 16.059547034047146 },\n{ lng: 108.23086738586424, lat: 16.075630202564316 },\n],\noverride: true,\n};\nconst DemoGroundOverlay = (props) => {\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\noptions={{\ncenter: { lat: 16.077279, lng: 108.222275 },\nzoom: 16,\ncontrols: true,\n}}\naccessKey={\"d69ab3c4b70818de546a1b1bb15aeaa7\"}\nversion={\"2.4\"}\n>\n<MFGroundOverlay\ngetUrl={options.getUrl}\nbounds={options.bounds}\noverride={options.override}\n/>\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoGroundOverlay;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tbounds\ttrue\tILatLngBounds\t\tVùng hiển thị của Ground overlay\t2\tgetUrl\ttrue\tfunction\t\tHàm nhận vào 4 giá trị x, y, zoom, is3dModevà trả về đường dẫn đến map tile\t3\toverride\tfalse\tboolean\tfalse\tNếu true thì sẽ không hiển thị Map4D tile và các đối tượng cảu Map4D trong khu vực của Ground overlay\t4\tvisible\tfalse\tboolean\ttrue\tNếu là true thì Ground overlay sẽ được hiển thị\t5\tzIndex\tfalse\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các Ground Overlay với nhau hoặc giữa Ground Overlay với các đối tượng khác trên bản đồ\t6\topacity\tfalse\tnumber\t1\tĐộ trong suốt của Ground overlay. Có giá trị từ 0 đến 1\t7\tmap\tfasle\tmap4d.Map\t\tHiển thị Ground Overlay ở map nào, nếu không có sẽ hiển thị ở map gần nhất chứa Ground Overlay\t8\tonCreated\tfasle\t(Ground Overlay: map4d.GroundOverlay) => void\t\tEvent sau khi tạo Ground Overlay"}},"/layers/image":{"title":"Image Overlay","data":{"":"","sử-dụng#Sử dụng":"import React from \"react\"\nimport { MFImageOverlay, MFMap } from \"react-map4d-map\"\n\nlet options = {\nurl: `https://cdn.glitch.com/4c9ebeb9-8b9a-4adc-ad0a-238d9ae00bb5%2Fmdn_logo-only_color.svg?1535749917189`,\nbounds: [{ lng: 108.214421, lat: 16.061733 }, { lng: 108.23086738586424, lat: 16.075630202564316 }] as any,\nzIndex: 1\n}\nconst DemoImageOverlay = () => {\nreturn (\n<>\n<div style={{ width: '100%', height: '400px' }}>\n<MFMap\noptions={{\ncenter: { lat: 16.077279, lng: 108.222275 },\nzoom: 13,\ncontrols: true\n}}\naccessKey={\"d69ab3c4b70818de546a1b1bb15aeaa7\"}\nversion={\"2.4\"} >\n<MFImageOverlay\nurl={options.url}\nbounds={options.bounds}\nzIndex={options.zIndex}\n/>\n</MFMap>\n</div>\n</>\n)\n}\nexport default DemoImageOverlay;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\turl\ttrue\tstring\t\tĐường dẫn url của image\t1\tbounds\ttrue\tILatLngBounds\t\tVùng hiển thị của Image Overlay\t2\tvisible\tfalse\tboolean\ttrue\tNếu là true thì Image Overlay sẽ được hiển thị\t3\tzIndex\tfalse\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các Image Overlay với nhau hoặc giữa Image Overlay với các đối tượng khác trên bản đồ\t4\topacity\tfalse\tnumber\t1\tĐộ trong suốt của Image Overlay. Có giá trị từ 0 đến 1\t5\tmap\tfasle\tmap4d.Map\t\tHiển thị Image Overlay ở map nào, nếu không có sẽ hiển thị ở map gần nhất chứa Image Overlay\t6\tonCreated\tfasle\t(Image Overlay: map4d.ImageOverlay) => void\t\tEvent sau khi tạo Image Overlay"}},"/drawing/building":{"title":"Building","data":{"":"","sử-dụng#Sử dụng":"import React, { useState } from \"react\";\nimport { MFBuilding, MFMap } from \"react-map4d-map\";\n\nconst DemoBuilding = () => {\n\nconst [position, setPosition] = useState({ lat: 16.103254, lng: 108.214835 });\n\nconst onMapReady = (map) => {\nmap.setMapType(map4d.MapType.map3d);\n}\n\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\nonMapReady={onMapReady}\noptions={{\ncenter: { lat: 16.103254, lng: 108.214835 },\nzoom: 18,\ntilt: 50,\nbearing: 250,\ncontrols: true,\n}}\naccessKey={\"Your key\"}\nversion={\"2.4\"}\n>\n<MFBuilding\nname=\"test\"\nmodel={\"https://sw-hcm-1.vinadata.vn/v1/AUTH_d0ecabcbdcd74f6aa6ac9a5da528eb78/sdk/models/5d26e774bb542caaf439e605.obj\"}\ntexture={\"https://sw-hcm-1.vinadata.vn/v1/AUTH_d0ecabcbdcd74f6aa6ac9a5da528eb78/sdk/textures/5d26e775bb542caaf439e607.png\"}\nposition={position}\n/>\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoBuilding;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tposition\ttrue\tILatLng\t\tChỉ định một ILatLng để xác định vị trí của Building.\t2\tname\tfalse\tstring\tUnknown name\tChỉ định tên của Building mà bạn tạo.\t3\tscale\tfalse\tnumber\t1\tChỉ định tỉ lệ của Building được vẽ ra ở trên bản đồ so với tỉ lệ thật của nó. Ví dụ khi giá trị scale là 0.5 thì Building sẽ nhỏ hơn một nửa so với kích thước thật của nó.\t4\tbearing\tfasle\tnumber\t0\tChỉ định góc quay của Building khi được vẽ ra trên bản đồ theo đơn vị là Độ. Bình thường giá trị mặc định của nó là 0. Khi bạn muốn quay Building theo một hướng nào đó thì bạn chỉ cần set lại giá trị bearing trong khoảng từ 0 đến 360 độ.\t5\televation\tfasle\tnumber\t0\tChỉ định độ cao của Building so với mực nước biển theo đơn vị mét.\t6\theight\tfasle\tnumber\t1\tChỉ định chiều cao của Building theo đơn vị là mét. Thuộc tính này chỉ có tác dụng khi Building của bạn được tạo từ một mảng ILatLng thông qua thuộc tính coordinates (hay còn gọi là Extrude Building). Nó không có tác dụng với Building được vẽ bằng Model và Texture.\t7\tmodel\tfasle\tstring\t\tChỉ định một đường dẫn URL để lấy dữ liệu model cho Building.\t8\ttexture\tfasle\tstring\t\tChỉ định một đường dẫn URL để lấy dữ liệu texture cho Building. Thuộc tính này chỉ được dùng khi thuộc tính model được set giá trị. Nó sẽ map texture này vào model mà bạn đã set cho Building. Nếu bạn không set giá trị texture khi đã set giá trị model thì bản đồ sẽ vẽ một building màu trắng.\t9\tcoordinates\tfasle\tILatLng[]\t\tChỉ định một mảng vị trí ILatLng để tạo một Building hình khối với mặt đáy của hình khối là mảng vị trí này. Nó kết hợp với thuộc tính height để tạo chiều cao cho hình khối đó (building này được gọi là Extrude Building). Trường hợp dùng coordinates thì sẽ không dùng đến thuộc tính texture. Nếu set giá trị cho coordinates và cả model đồng thời thì sẽ ưu tiên lấy giá trị của modelđể tạo Building.\t10\tvisible\tfasle\tboolean\ttrue\tXác định Building có thể ẩn hay hiện trên bản đồ\t11\tdraggable\tfasle\tboolean\tfalse\tCho phép người dùng có thể kéo Building trên bản đồ hay không.\t12\tuserInteractionEnabled\tfasle\tboolean\ttrue\tCho phép người dùng có thể tương tác được với Building hay không. Khi không cho phép người dùng tương tác với Building thì tất cả các sự kiện liên quan tới Building từ phía người dùng sẽ không có tác dụng.\t13\tselected\tfasle\tboolean\tfalse\tChỉ định Building có được hightlight hay không. Khi nó được set là true thì Building sẽ được vẽ một đường viền màu đỏ xung quanh để giúp người dùng dễ nhận biết. Còn khi nó được set giá trị là false thì nó sẽ được vẽ như một Building bình thường.\t14\tgrowUp\tfasle\tboolean\ttrue\tQuy định Building có hiệu ứng mọc hay không. Hiệu ứng này tạo cảm giác đẹp mắt hơn khi Building vừa được load lên bản đồ."}},"/drawing/markerCluster":{"title":"Marker Cluster","data":{"":"","sử-dụng#Sử dụng":"import React from \"react\";\nimport { MFMap, MFMarker, MFMarkerCluster } from \"react-map4d-map\";\n\nconst locations = [\n[106.754497, 10.769589],\n[106.704497, 10.769589],\n[106.404497, 10.769589],\n[106.204497, 10.749589],\n]\n\nconst DemoMarkerCluster = () => {\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\noptions={{\ncenter: { lat: 10.845502, lng: 106.523784 },\nzoom: 9,\ncontrols: true,\n}}\naccessKey={\"Your key\"}\nversion={\"2.4\"}\n>\n<MFMarkerCluster\nminZoom={0}\nmaxZoom={10}\nradius={150}\nzoomOnClick\n>\n{locations?.map((loc, index) => {\nreturn (\n<MFMarker position={loc} label={index.toString()} key={index} />\n);\n})}\n</MFMarkerCluster>\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoMarkerCluster;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tminZoom\ttrue\tnumber\t0\tChỉ định mức zoom nhỏ nhất mà các marker có thể hiển thị theo từng nhóm.\t2\tmaxZoom\tfalse\tnumber\t22\tChỉ định mức zoom lớn nhất mà các marker có thể hiển thị theo từng nhóm.\t3\tradius\tfalse\tnumber\t100\tChỉ định bán kính của cluster theo đơn vị pixel.\t4\tzoomOnClick\tfasle\tboolean\ttrue\tChỉ định bản đồ có thể zoom khi người dùng click vào đối tượng MarkerClusterer không."}},"/drawing/directionsRenderer":{"title":"Directions Renderer","data":{"":"","sử-dụng#Sử dụng":"import React, { useRef } from \"react\";\nimport { MFDirectionsRenderer, MFMap } from \"react-map4d-map\";\n\nconst option = {\nroutes: [\n[\n{ lat: 16.078814, lng: 108.221592 },\n{ lat: 16.078972, lng: 108.223034 },\n{ lat: 16.075353, lng: 108.223513 },\n],\n[\n{ lat: 16.078814, lng: 108.221592 },\n{ lat: 16.077491, lng: 108.221735 },\n{ lat: 16.077659, lng: 108.223212 },\n{ lat: 16.075353, lng: 108.223513 },\n],\n],\noriginMarkerOptions: {\nposition: { lat: 16.079774, lng: 108.220534 },\ntitle: \"Start\",\ndraggable: true,\nvisible: true,\n},\ndestinationMarkerOptions: {\nposition: { lat: 16.073661, lng: 108.222972 },\ntitle: \"End\",\nvisible: true,\ndraggable: true,\nuserInteractionEnabled: false,\n},\n\nactiveOutlineWidth: 0,\ninactiveOutlineWidth: 2,\ninactiveOutlineColor: \"#FF00FF\",\n};\n\nconst DemoDirectionsRenderer = () => {\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\noptions={{\ncenter: { lat: 16.077279, lng: 108.222275 },\nzoom: 16,\ncontrols: true,\n}}\naccessKey={\"Your key\"}\nversion={\"2.4\"}\n>\n<MFDirectionsRenderer\nroutes={option.routes}\noriginMarkerOptions={option.originMarkerOptions}\ndestinationMarkerOptions={option.destinationMarkerOptions}\nactiveOutlineWidth={option.activeOutlineWidth}\ninactiveOutlineWidth={option.inactiveOutlineWidth}\ninactiveOutlineColor={option.inactiveOutlineColor}\n/>\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoDirectionsRenderer;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\troutes\tfalse\tstring | RouteOptions| ILatLng[][]\t\tTruyền vào một mảng 2 chiều các tọa độ ILatLng hoặc dữ liệu Route bằng JSON string trả về từ Map4D SDK API Route hoặc một đối tượng RouteOptions để tạo Directions Renderer.\t2\tactivedIndex\tfalse\tnumber\t\tChỉ định index cho route được active trong Directions Renderer.\t3\tactiveStrokeWidth\tfalse\tnumber\t\tChỉ định độ rộng của active line theo đơn vị point.\t4\tactiveStrokeColor\tfasle\tstring\t\tChỉ định màu sắc của active line theo mã HEX (ví dụ \"#FF0000\").\t5\tactiveOutlineWidth\tfasle\tnumber\t\tChỉ định độ rộng của active outline theo đơn vị point.\t6\tactiveOutlineColor\tfasle\tstring\t\tChỉ định màu sắc của active outline theo mã HEX (ví dụ \"#FF0000\").\t7\tactiveStrokePattern\tfasle\tPatternItem\t\tChỉ định pattern của active line. Tương tự như pattern của Polyline\t8\tinactiveStrokeWidth\tfasle\tnumber\t\tChỉ định độ rộng của inactive line theo đơn vị point.\t9\tinactiveStrokeColor\tfasle\tstring\t\tChỉ định màu sắc của inactive line theo mã HEX (ví dụ \"#FF0000\").\t10\tinactiveOutlineWidth\tfasle\tnumber\t\tChỉ định độ rộng của inactive outline theo đơn vị point.\t11\tinactiveOutlineColor\tfasle\tstring\t\tChỉ định màu sắc của inactive outline theo mã HEX (ví dụ \"#FF0000\").\t12\tinactiveStrokePattern\tfasle\tPatternItem\t\tChỉ định pattern của inactive outline. Tương tự như pattern của Polyline\t13\toriginMarkerOptions\tfasle\tMarkerOptions\t\tChỉ định các options cho marker bắt đầu.\t14\tdestinationMarkerOptions\tfasle\tMarkerOptions\t\tChỉ định các options cho marker kết thúc.\t15\twaypointMarkerOptions\tfasle\tMarkerOptions[]\t\tLà mảng marker option chỉ định các marker waypoint. Các marker waypoint này có vị trí nằm ngoài route\t16\tonMarkerDragEnd\tfasle\tFunction\t\tChỉ định options callback sau khi thực hiện việc kéo Marker. Callback được gọi với tham số args là đối tượng chứa tọa độ LatLng của các Marker trong Directions Renderer."}},"/drawing/poi":{"title":"POI","data":{"":"","sử-dụng#Sử dụng":"import React, { useState } from \"react\"\nimport { MFMap, MFPOI } from \"react-map4d-map\"\n\nconst DemoPOI = (props) => {\n\nconst [position, setPosition] = useState({lat: 10.774434, lng: 106.701727})\n\nreturn (\n<>\n<div style={{ width: '100%', height: '400px' }}>\n<MFMap\noptions={{\ncenter: { lat: 10.774434, lng: 106.701727 },\nzoom: 18,\ncontrols: true\n}}\naccessKey={'Your key'}\nversion={\"2.4\"} >\n<MFPOI title={\"Demo POI cafe\"} type={\"cafe\"} position={position} />\n</MFMap>\n</div>\n</>\n)\n}\n\nexport default DemoPOI","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDefault value\tDescription\t1\tposition\ttrue\tILatLng\t\tChỉ định một ILatLng để xác định vị trí ban đầu của POI.\t2\ttitle\tfalse\tstring\t\tChỉ định tiêu đề của POI. Tiêu đề sẽ hiển thị thông tin của POI mà bạn muốn hiển thị cho người dùng.\t3\tsubtitle\tfalse\tstring\t\tChỉ định thông tin mô tả của POI.\t4\tcolor\tfasle\tstring\t\tChỉ định màu cho tiêu đề và màu icon (nếu sử dụng thuộc tính type) của POI.\t5\ttype\tfasle\tstring\t\tChỉ định kiểu của POI, tùy thuộc vào kiểu mà icon của POI sẽ có hình ảnh tương ứng. Phụ thuộc vào kind được quy định trong file style.\t6\ticon\tfasle\tstring\tnull\tChỉ định một đường dẫn URL để lấy hình ảnh cho POI. Nếu option này được set giá trị thì hình ảnh của POI sẽ lấy theo URL này mà không cần quan tâm tới option type .\t7\televation\tfasle\tnumber\t0\tChỉ định độ cao của POI so với mực nước biển, đơn vị là mét.\t8\tzIndex\tfasle\tnumber\t0\tChỉ định thứ tự chồng nhau giữa các POI với nhau, nó không dùng để xác định thứ tự chồng nhau so với các đối tượng khác.\t9\tvisible\tfasle\tboolean\ttrue\tXác định POI có thể ẩn hay hiện trên bản đồ\t10\tdraggable\tfasle\tboolean\tfalse\tCho phép người dùng có thể kéo POI trên bản đồ hay không\t11\tuserInteractionEnabled\tfasle\tboolean\ttrue\tCho phép người dùng có thể tương tác được với POI hay không. Khi không cho phép người dùng tương tác với POI thì tất cả các sự kiện liên quan tới POI từ phía người dùng sẽ không có tác dụng."}},"/layers/building":{"title":"Building Overlay","data":{"":"","sử-dụng#Sử dụng":"import React from \"react\";\nimport { MFMap, MFBuildingOverlay } from \"react-map4d-map\";\n\nlet options = {\ngetUrl: function (x, y, zoom) {\nreturn `rest-api-get-building-from-tile-coordinate`;\n},\nparserData: function (response) {\nlet buildingDatas = [];\n/**\n* parser data from response ...\n*/\nreturn buildingDatas;\n},\nprefixId: \"prefix\",\nvisible: true,\n};\nconst DemoBuildingOverlay = () => {\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\noptions={{\ncenter: { lat: 16.042590223437674, lng: 108.2295094493915 },\nzoom: 16,\n}}\naccessKey={\"Your key\"}\nversion={\"2.4\"}\n>\n<MFBuildingOverlay\ngetUrl={options.getUrl}\nparserData={options.parserData}\nprefixId={options.prefixId}\n/>\n</MFMap>\n</div>\n</>\n);\n};\n\nDemoBuildingOverlay.propTypes = {};\n\nexport default DemoBuildingOverlay;","props#Props":"No\tName\tisRequired\tType\tDescription\t1\tgetUrl\ttrue\tfunction\tHàm nhận vào 3 giá trị x, y, zoom và trả về đường dẫn đến Buildings\t2\tparserData\ttrue\tfunction\tHàm nhận vào response data từ api của getUrl và parser thành mảng các BuildingData\t3\tprefixId\tfalse\tstring\tGiá trị được thêm vào trước id của những building thuộc building overlay.Dùng để tránh nhầm lẫn trong trường hợp trùng id với building của Map4D hay các building overlay khác\t4\tvisible\tfasle\tboolean\tNếu true thì building overlay sẽ được hiển thị"}},"/layers/data":{"title":"Data Layer","data":{"":"","sử-dụng#Sử dụng":"import React from \"react\";\nimport { MFDataLayer, MFMap } from \"react-map4d-map\";\n\nlet geoJsonStr = `{\n\"type\": \"FeatureCollection\",\n\"features\": [\n{\n\"type\": \"Feature\",\n\"properties\": {\n\"stroke\": \"#555555\",\n\"stroke-width\": 0,\n\"stroke-opacity\": 1,\n\"fill\": \"#ff0000\",\n\"fill-opacity\": 1\n},\n\"geometry\": {\n\"type\": \"Polygon\",\n\"coordinates\": [\n[\n[\n106.62574768066405,\n10.83802680397086\n],\n[\n106.6278076171875,\n10.814421958289003\n],\n[\n106.66248321533203,\n10.814421958289003\n],\n[\n106.69750213623047,\n10.840724382155452\n],\n[\n106.69132232666016,\n10.845107894830463\n],\n[\n106.64051055908203,\n10.865338658847957\n],\n[\n106.62574768066405,\n10.83802680397086\n]\n]\n]\n}\n},\n{\n\"type\": \"Feature\",\n\"properties\": {\n\"stroke\": \"#0000ff\",\n\"stroke-width\": 5,\n\"stroke-opacity\": 1\n},\n\"geometry\": {\n\"type\": \"LineString\",\n\"coordinates\": [\n[\n106.68067932128905,\n10.869721810427496\n],\n[\n106.64634704589844,\n10.801269881015028\n]\n]\n}\n},\n{\n\"type\": \"Feature\",\n\"properties\": {},\n\"geometry\": {\n\"type\": \"Point\",\n\"coordinates\": [\n106.68823242187499,\n10.852947478433613\n]\n}\n},\n{\n\"type\": \"Feature\",\n\"properties\": {},\n\"geometry\": {\n\"type\": \"Point\",\n\"coordinates\": [\n106.6926097869873,\n10.824538548432923\n]\n}\n}\n]\n}`;\n\nconst DemoDataLayer = () => {\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\noptions={{\ncenter: { lat: 10.836719, lng: 106.656162 },\nzoom: 13,\ncontrols: true,\n}}\naccessKey={\"Your key\"}\nversion={\"2.4\"}\n>\n<MFDataLayer geoJsonString={geoJsonStr} />\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoDataLayer;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDescription\t1\tgeoJsonString\ttrue\tPolygon | MultiPolygon | LineString | MultiLineString | Point\tDữ liệu layer"}},"/layers/poi":{"title":"POI Overlay","data":{"":"","sử-dụng#Sử dụng":"import React from \"react\";\nimport { MFMap, MFPOIOverlay } from \"react-map4d-map\";\n\nlet options = {\ngetUrl: function (x, y, zoom) {\nreturn `https://poi-random.herokuapp.com/poi/${zoom}/${x}/${y}`;\n},\nparserData: function (response) {\nlet data = JSON.parse(response);\nlet places = data.pois || [];\nlet poiDatas = [];\nplaces.forEach((place) => {\nlet poiData = {\n...place,\ntitleColor: \"#0000FF\",\ntype: \"park\",\n};\npoiDatas.push(poiData);\n});\nreturn poiDatas;\n},\nprefixId: \"poi-overlay-\",\n};\nconst DemoPOIOverlay = () => {\nconst onMapReady = (map) => {\nmap.setPOIsEnabled(false);\n};\n\nreturn (\n<>\n<div style={{ width: \"100%\", height: \"400px\" }}>\n<MFMap\nonMapReady={onMapReady}\noptions={{\ncenter: { lat: 16.042590223437674, lng: 108.2295094493915 },\nzoom: 16,\n}}\naccessKey={\"Your key\"}\nversion={\"2.4\"}\n>\n<MFPOIOverlay\ngetUrl={options.getUrl}\nparserData={options.parserData}\nprefixId={options.prefixId}\n/>\n</MFMap>\n</div>\n</>\n);\n};\n\nexport default DemoPOIOverlay;","kết-quả#Kết quả":"","props#Props":"No\tName\tisRequired\tType\tDescription\t1\tgetUrl\ttrue\tfunction\tChỉ định một ILatLng để xác định vị trí ban đầu của POI.\t2\tparserData\ttrue\tfunction\tChỉ định tiêu đề của POI. Tiêu đề sẽ hiển thị thông tin của POI mà bạn muốn hiển thị cho người dùng.\t3\tprefixId\tfalse\tstring\tChỉ định thông tin mô tả của POI.\t4\tvisible\tfasle\tboolean\tChỉ định màu cho tiêu đề và màu icon (nếu sử dụng thuộc tính type) của POI."}},"/references/iconProps":{"title":"IconProps","data":{"":"","type#Type":"interface IconProps {\nwidth: number;\nheight: number;\nurl: string;\n}","mô-tả#Mô tả":"No\tname\ttype\tDescription\t1\twidth\tnumber\tChiều rộng icon\t2\theight\tnumber\tChiều rộng icon\t3\turl\tstring\tĐường dẫn hình ảnh cho icon"}},"/references/iLatLng":{"title":"Ilatlng","data":{"":""}},"/references/iLatLngBounds":{"title":"Ilatlngbounds","data":{"":""}},"/references/iPoint":{"title":"Ipoint","data":{"":""}},"/references/map4d.MarkerLabel":{"title":"Map4d.markerlabel","data":{"":""}},"/references/icon_props":{"title":"Icon Props","data":{"":""}},"/references/icon-props":{"title":"Icon Props","data":{"":""}},"/references/mapOptions":{"title":"MapOptions","data":{"":"","type#Type":"interface MapOptions {\ncenter?: ILatLng;\nzoom?: number;\nminZoom?: number;\nmaxZoom?: number;\nmaxNativeZoom?: number;\ngeolocate?: boolean;\ntilt?: number;\nbearing?: number;\ncontrols?: boolean;\nmapType?: any;\ncontrolOptions?: any;\nrestrictionBounds?: any;\nshouldChangeMapMode?: Function;\ncooperativeGestures?: boolean;\n}","mô-tả#Mô tả":"No\tname\ttype\tDescription\t1\twidth\tnumber\tChiều rộng icon\t2\theight\tnumber\tChiều rộng icon\t3\turl\tstring\tĐường dẫn hình ảnh cho icon"}},"/references/lat-lng-bounds":{"title":"Lat Lng Bounds","data":{"":""}},"/references/lat-lng":{"title":"Lat Lng","data":{"":""}},"/references/latlngbounds":{"title":"Latlngbounds","data":{"":""}}}